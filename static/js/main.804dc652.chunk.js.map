{"version":3,"sources":["reducers/currentWeatherReducer.js","constants/actionTypes.js","reducers/forecastReducer.js","reducers/newsReducer.js","reducers/index.js","actions/index.js","endPoints.js","config/keys.js","helper/dataShaper.js","containers/CurrentWeather/styles.js","containers/CurrentWeather/index.js","containers/Forecast/styles.js","containers/Forecast/ForecastCard/styles.js","containers/Forecast/ForecastCard/index.js","containers/Forecast/index.js","containers/News/styles.js","containers/News/NewsCard/index.js","containers/News/index.js","styles.js","Loading.js","App.js","index.js"],"names":["initialState","isFetched","currentCityId","data","currentWeatherReducer","state","action","type","payload","forecastReducer","newsReducer","rootReducer","combineReducers","getCurrentWeather","dispatch","getState","a","axios","get","response","name","main","temp","temp_max","temp_min","weather","weatherDes","icon","dt","timezone","timeStamp","weekday","format","fromUnixTime","Number","toFixed","String","replace","iconSrc","getWeatherForecast","rawDataList","list","arr","forecasts","array","chunk","map","item","nth","desc","getNews","news","articles","slice","title","description","url","urlToImage","Wrapper","styled","div","City","h1","SelectCity","select","WeatherCondition","p","Temperature","Icon","img","Weekday","span","Today","MaxTemp","MinTemp","CurrentWeather","this","props","current","className","defaultValue","style","width","onChange","changeCity","value","src","alt","Component","connect","getCurrent","e","target","WeatherIcon","WeatherDesc","ForecastCard","Forecast","forecast","key","React","getForecast","Newscard","href","News","NewsCard","Row","BounceAnimation","keyframes","DotWrapper","Dot","delay","Loading","App","loading","setTimeout","setState","id","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.804dc652.chunk.js","sourcesContent":["import { GET_CURRENT, CHANGE_CITY } from \"../constants/actionTypes\"\r\n\r\nconst initialState = {\r\n  isFetched: false,\r\n  currentCityId: null,\r\n  data: null\r\n}\r\n\r\nconst currentWeatherReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_CURRENT:\r\n      return { ...state, isFetched: true, data: action.payload }\r\n    case CHANGE_CITY:\r\n      return { ...state, currentCityId: action.data }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default currentWeatherReducer\r\n","export const GET_CURRENT = 'GET_CURRENT';\r\nexport const GET_FORECAST = 'GET_FORECAST';\r\nexport const GET_NEWS = 'GET_NEWS';\r\nexport const CHANGE_CITY = \"CHANGE_CITY\"","import { GET_FORECAST } from \"../constants/actionTypes\"\r\n\r\nconst initialState = {\r\n  isFetched: false,\r\n  data: null\r\n}\r\n\r\nconst forecastReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_FORECAST:\r\n      return { ...state, isFetched: true, data: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default forecastReducer\r\n","import { GET_NEWS } from \"../constants/actionTypes\"\r\n\r\nconst initialState = {\r\n  isFetched: false,\r\n  data: null\r\n}\r\n\r\nconst newsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_NEWS:\r\n      return { ...state, isFetched: true, data: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default newsReducer\r\n","import {combineReducers} from 'redux';\r\nimport currentWeatherReducer from \"./currentWeatherReducer\";\r\nimport forecastReducer from \"./forecastReducer\";\r\nimport newsReducer from \"./newsReducer\"\r\n\r\nconst rootReducer = combineReducers({\r\n  currentWeatherReducer,\r\n  forecastReducer,\r\n  newsReducer\r\n})\r\n\r\nexport default rootReducer;","import { GET_CURRENT, GET_FORECAST, GET_NEWS } from \"../constants/actionTypes\"\r\nimport { WEATHER_CURRENT_ENDPOINT, NEWS_TOP_HEADLINE_ENDPOINT, WEATHER_FORECAST_ENDPOINT } from \"../endPoints\"\r\nimport { WEATHER_API_KEY, NEWS_API_KEY } from \"../config/keys\"\r\nimport { fromUnixTime, format } from \"date-fns\"\r\nimport dataShaper from \"../helper/dataShaper\"\r\nimport axios from \"axios\"\r\n\r\n// api format: https://api.openweathermap.org/data/2.5/weather?id=2172797&appid=dd7a88618d8df6c29500943ea9758455\r\nexport const getCurrentWeather = async (dispatch, getState) => {\r\n  const state = getState()\r\n  const currentCityId = state.currentWeatherReducer.currentCityId ? state.currentWeatherReducer.currentCityId : \"2147714\"\r\n  const response = await axios.get(`${WEATHER_CURRENT_ENDPOINT}?id=${currentCityId}&appid=${WEATHER_API_KEY}`)\r\n  let {\r\n    name,\r\n    main: { temp, temp_max, temp_min },\r\n    weather: [{ main: weatherDes, icon }],\r\n    dt,\r\n    timezone\r\n  } = response.data\r\n  const timeStamp = dt + timezone\r\n  const weekday = format(fromUnixTime(timeStamp), \"iiii\")\r\n  temp = Number(temp - 273.15).toFixed(0)\r\n  temp_max = Number(temp_max - 273.15).toFixed(0)\r\n  temp_min = Number(temp_min - 273.15).toFixed(0)\r\n  icon = String(icon).replace(\"n\", \"d\")\r\n\r\n  const iconSrc = `http://openweathermap.org/img/wn/${icon}@2x.png`\r\n  dispatch({\r\n    type: GET_CURRENT,\r\n    payload: { name, temp, weatherDes, temp_max, temp_min, weekday, iconSrc }\r\n  })\r\n}\r\n\r\n// api format: https://api.openweathermap.org/data/2.5/forecast?id=2172797&appid=dd7a88618d8df6c29500943ea9758455\r\n\r\n// { weekday, iconSrc, temp, desc }\r\n\r\nexport const getWeatherForecast = async (dispatch, getState) => {\r\n  const state = getState()\r\n  const currentCityId = state.currentWeatherReducer.currentCityId ? state.currentWeatherReducer.currentCityId : \"2147714\"\r\n  const response = await axios.get(`${WEATHER_FORECAST_ENDPOINT}?id=${currentCityId}&appid=${WEATHER_API_KEY}`)\r\n  const rawDataList = response.data.list\r\n  const forecasts = dataShaper(rawDataList)\r\n  dispatch({\r\n    type: GET_FORECAST,\r\n    payload: forecasts\r\n  })\r\n}\r\n//  api format: https://newsapi.org/v2/top-headlines?country=au&apiKey=ca1cc463ddcd43939022f3aad58b9252\r\n\r\nexport const getNews = async (dispatch) => {\r\n  const country = \"au\"\r\n  const response = await axios.get(`${NEWS_TOP_HEADLINE_ENDPOINT}?country=${country}&apiKey=${NEWS_API_KEY}`)\r\n  const news = response.data.articles.slice(0, 5).map((item) => {\r\n    const { title, description, url, urlToImage } = item\r\n    return { title, description, url, urlToImage }\r\n  })\r\n  dispatch({\r\n    type: GET_NEWS,\r\n    payload: news\r\n  })\r\n}\r\n","export const WEATHER_CURRENT_ENDPOINT=\"https://api.openweathermap.org/data/2.5/weather\"\r\nexport const WEATHER_FORECAST_ENDPOINT=\"https://api.openweathermap.org/data/2.5/forecast\"\r\nexport const NEWS_TOP_HEADLINE_ENDPOINT=\"https://newsapi.org/v2/top-headlines\"","export const WEATHER_API_KEY=\"dd7a88618d8df6c29500943ea9758455\"\r\nexport const NEWS_API_KEY=\"ca1cc463ddcd43939022f3aad58b9252\"","import array from 'lodash/array'\r\nimport { fromUnixTime, format } from 'date-fns'\r\n\r\n// { weekday, iconSrc, temp, desc }\r\nexport default (arr)=>{\r\n  const list = array.chunk(arr,8)\r\n  const resultList = list.map((item)=>{\r\n    let {\r\n      main: { temp},\r\n      weather: [{ main: desc, icon }],\r\n      dt\r\n    } =  array.nth(item,3)\r\n    const timezone = 36000\r\n    const timeStamp = dt + timezone;\r\n    const weekday = format(fromUnixTime(timeStamp), \"iiii\")\r\n    temp = Number(temp - 273.15).toFixed(0)\r\n    icon = String(icon).replace(\"n\",\"d\")\r\n    \r\n    const iconSrc = `http://openweathermap.org/img/wn/${icon}@2x.png`\r\n   return { timeStamp, weekday, iconSrc, temp, desc }\r\n   })\r\n\r\n  return resultList;\r\n}","import styled from \"styled-components\"\r\nexport const Wrapper = styled.div`\r\n  background-image:url(\"https://images.pexels.com/photos/2876652/pexels-photo-2876652.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\");\r\n  margin: 20px 0;\r\n  border-radius: 5px;\r\n  .vertical {\r\n    display: flex;\r\n    flex-flow: row;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    div {\r\n      margin: 10px;\r\n    }\r\n    img {\r\n      max-width: 30px;\r\n    }\r\n  }\r\n  @media (min-width: 576px) {\r\n    .vertical {\r\n      display: flex;\r\n      flex-flow: column;\r\n      align-items: center;\r\n      img {\r\n        max-width: initial;\r\n      }\r\n    }\r\n  }\r\n  .horizontal {\r\n    display: flex;\r\n    flex-flow: row;\r\n    justify-content: space-between;\r\n    div {\r\n      margin: 10px;\r\n    }\r\n  }\r\n`\r\nexport const City = styled.h1`\r\n  margin: 0.5em;\r\n`\r\nexport const SelectCity = styled.select`\r\n  & > option:hover{\r\n    transform:scale(1.5)\r\n  }\r\n`\r\nexport const WeatherCondition = styled.p``\r\nexport const Temperature = styled.p``\r\nexport const Icon = styled.img``\r\nexport const Weekday = styled.span`\r\n  margin: 5px;\r\n`\r\nexport const Today = styled.span`\r\n  margin: 5px;\r\n`\r\n\r\nexport const MaxTemp = styled.span`\r\n  margin: 5px;\r\n`\r\nexport const MinTemp = styled.span`\r\n  margin: 5px;\r\n`\r\n","import React, { Component } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { getCurrentWeather, getWeatherForecast } from \"../../actions\"\r\nimport { CHANGE_CITY } from \"../../constants/actionTypes\"\r\nimport { Wrapper, City, WeatherCondition, Temperature, Weekday, MaxTemp, MinTemp, Today, Icon, SelectCity } from \"./styles\"\r\n\r\n// name, temp, weatherDes,temp_max, temp_min, weekday\r\nclass CurrentWeather extends Component {\r\n  componentDidMount() {\r\n    // this.props.getCurrent()\r\n  }\r\n  render() {\r\n    const { isFetched, data } = this.props.current\r\n    return (\r\n      <Wrapper>\r\n        <div className=\"vertical\">\r\n          <City>{isFetched ? data.name : \"\"}</City>\r\n          <SelectCity className=\"selectCity\" defaultValue=\"Sydney\" style={{ width: 80 }} onChange={this.props.changeCity}>\r\n            <option value=\"2147714\">Sydney</option>\r\n            <option value=\"2158177\">Melbourne</option>\r\n            <option value=\"2172517\">Canberra</option>\r\n            <option value=\"2063523\">Perth</option>\r\n            <option value=\"2078025\">Adelaide</option>\r\n          </SelectCity>\r\n          <Icon src={data.iconSrc} alt=\"loading\" />\r\n          <WeatherCondition>{isFetched ? data.weatherDes : \"\"}</WeatherCondition>\r\n          <Temperature>\r\n            {isFetched ? data.temp : \"\"}\r\n            <sup>°</sup>C\r\n          </Temperature>\r\n        </div>\r\n        <div className=\"horizontal\">\r\n          <div>\r\n            <Weekday>{isFetched ? data.weekday : \"\"}</Weekday>\r\n            <Today>Today</Today>\r\n          </div>\r\n          <div>\r\n            <MaxTemp>\r\n              {isFetched ? data.temp_max : \"\"}\r\n              <sup>°</sup>C\r\n            </MaxTemp>\r\n            <MinTemp>\r\n              {isFetched ? data.temp_min : \"\"}\r\n              <sup>°</sup>C\r\n            </MinTemp>\r\n          </div>\r\n        </div>\r\n      </Wrapper>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  current: state.currentWeatherReducer\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getCurrent: () => dispatch(getCurrentWeather),\r\n  changeCity: e => {\r\n    dispatch({ type: CHANGE_CITY, data: e.target.value })\r\n    dispatch(getCurrentWeather)\r\n    dispatch(getWeatherForecast)\r\n  }\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CurrentWeather)\r\n","import styled from \"styled-components\"\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  /* background-color: lightblue; */\r\n`\r\n","import styled from \"styled-components\"\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 5px;\r\n  border-radius:5px;\r\n  background-color: lightsalmon;\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\r\n  transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);\r\n  &:hover {\r\n    box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\r\n  }\r\n`\r\nexport const Weekday = styled.span`\r\n  text-align: center;\r\n  flex: 1;\r\n`\r\nexport const WeatherIcon = styled.img`\r\n  max-width: 30px;\r\n  flex: 1;\r\n`\r\nexport const Temperature = styled.div`\r\n  flex: 1;\r\n  text-align: center;\r\n`\r\nexport const WeatherDesc = styled.span`\r\n  flex: 1;\r\n  text-align: center;\r\n`\r\n","import React from \"react\"\r\nimport { Wrapper, Weekday, WeatherIcon, Temperature, WeatherDesc } from \"./styles\"\r\n\r\nconst ForecastCard = ({ weekday, iconSrc, temp, desc }) => {\r\n  return (\r\n    <Wrapper>\r\n      <Weekday>{weekday}</Weekday>\r\n      <WeatherIcon src={iconSrc} />\r\n      <Temperature>\r\n        {temp}\r\n        <sup>°</sup>C\r\n      </Temperature>\r\n      <WeatherDesc>{desc}</WeatherDesc>\r\n    </Wrapper>\r\n  )\r\n}\r\nexport default ForecastCard\r\n","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\n\r\nimport { Wrapper } from \"./styles\"\r\nimport ForecastCard from \"./ForecastCard\"\r\n\r\nimport { getWeatherForecast } from \"../../actions\"\r\n\r\n\r\nclass Forecast extends React.Component {\r\n  componentDidMount() {\r\n    // this.props.getForecast()\r\n  }\r\n\r\n  render() {\r\n    const { isFetched, data } = this.props.forecasts\r\n    return (\r\n      <Wrapper className=\"forecast\">\r\n        {isFetched &&\r\n          data.map((forecast) => (\r\n            <ForecastCard\r\n              key={forecast.timeStamp}\r\n              weekday={forecast.weekday}\r\n              iconSrc={forecast.iconSrc}\r\n              temp={forecast.temp}\r\n              desc={forecast.desc}\r\n            />\r\n          ))}\r\n      </Wrapper>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  forecasts: state.forecastReducer\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getForecast: () => dispatch(getWeatherForecast)\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Forecast)\r\n","import styled from \"styled-components\"\r\n\r\nexport const Wrapper = styled.div`\r\n  /* background: lightslategrey; */\r\n`\r\n","import React from \"react\"\r\nimport \"./style.scss\"\r\nimport \"./toggle\"\r\nconst Newscard = ({ title, description, url, urlToImage }) => {\r\n  \r\n  return (\r\n    <div className=\"news-card\">\r\n      <div className=\"thumbnail\">\r\n        {urlToImage && <img src={urlToImage} alt=\"Loading\"></img>}\r\n        {urlToImage && <div className=\"category\">Photos</div>}\r\n      </div>\r\n\r\n      <div className=\"post-content\">\r\n        <h2 className=\"title\">{title}</h2>\r\n        <p className=\"description\">{description}</p>\r\n        <div className=\"post-meta\">\r\n          <span className=\"comments\">\r\n            <i className=\"fa fa-comments\"></i>\r\n            <a href={url}>Read More</a>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Newscard\r\n","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\n\r\nimport { Wrapper } from \"./styles\"\r\nimport NewsCard from \"./NewsCard\"\r\n\r\nimport { getNews } from \"../../actions\"\r\n\r\nclass News extends React.Component {\r\n  componentDidMount() {\r\n    // this.props.getNews()\r\n  }\r\n\r\n  render() {\r\n    const { isFetched, data } = this.props.news\r\n\r\n    return (\r\n      <Wrapper className=\"news\">\r\n        {isFetched &&\r\n          data.map((news) => (\r\n            <NewsCard key={news.title} title={news.title} description={news.description} url={news.url} urlToImage={news.urlToImage} />\r\n          ))}\r\n      </Wrapper>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  news: state.newsReducer\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getNews: () => dispatch(getNews)\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(News)\r\n","import styled from \"styled-components\"\r\nexport const Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  /* padding-right: 15px;\r\n  padding-left: 15px; */\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n  @media (min-width: 576px) {\r\n    max-width: 540px;\r\n  }\r\n  @media (min-width: 768px) {\r\n    max-width: 720px;\r\n  }\r\n  @media (min-width: 1200px) {\r\n    max-width: 1140px;\r\n  }\r\n`\r\n\r\nexport const Row = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow: overlay;\r\n  @media (min-width: 576px) {\r\n    flex-direction: row-reverse;\r\n    max-height:580px;\r\n    & > div:nth-child(2) {\r\n      flex: 1 1 40%;\r\n      overflow: overlay;\r\n    }\r\n    & > div:nth-child(1) {\r\n      flex: 1 1 60%;\r\n      display: flex;\r\n      flex-flow: row;\r\n      & > div {\r\n        display: flex;\r\n        flex-flow: column;\r\n        flex: 1;\r\n\r\n        justify-content:space-around;\r\n        & > img {\r\n          width: 80%;\r\n          max-width: 100px;\r\n          max-height: 100px;\r\n        }\r\n        & > * {\r\n          flex:0;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from \"react\"\r\nimport styled, { keyframes } from \"styled-components\"\r\n\r\nconst BounceAnimation = keyframes`\r\n  0% { margin-bottom: 0; }\r\n  50% { margin-bottom: 25px }\r\n  100% { margin-bottom: 0 }\r\n`\r\n\r\nconst DotWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100vh;\r\n`\r\nconst Dot = styled.div`\r\n  background-color: black;\r\n  border-radius: 50%;\r\n  width: 10px;\r\n  height: 10px;\r\n  margin: 30px 5px 0 5px;\r\n  /* Animation */\r\n  animation: ${BounceAnimation} 0.5s linear infinite;\r\n  animation-delay: ${(props) => props.delay};\r\n`\r\nfunction Loading() {\r\n  return (\r\n    <DotWrapper>\r\n      <h1>Loading</h1>\r\n      <Dot delay=\"0s\" />\r\n      <Dot delay=\".1s\" />\r\n      <Dot delay=\".2s\" />\r\n    </DotWrapper>\r\n  )\r\n}\r\n\r\nexport default Loading\r\n","import React from \"react\"\r\nimport CurrentWeather from \"./containers/CurrentWeather\"\r\nimport Forecast from \"./containers/Forecast\"\r\nimport News from \"./containers/News\"\r\nimport { Wrapper, Row } from \"./styles\"\r\nimport Loading from \"./Loading.js\"\r\nimport { connect } from \"react-redux\"\r\nimport { getNews, getCurrentWeather, getWeatherForecast } from \"./actions\"\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = { loading: true }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.loading()\r\n    // fake loading\r\n    setTimeout(() => {\r\n      this.setState({ loading: false })\r\n    }, 1000)\r\n  }\r\n\r\n  render() {\r\n    if (this.state.loading) return <Loading></Loading>\r\n    return (\r\n      <Wrapper id=\"weather-app\">\r\n        <CurrentWeather />\r\n        <Row>\r\n          <Forecast />\r\n          <News />\r\n        </Row>\r\n      </Wrapper>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => state\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  loading: () => {\r\n    dispatch(getCurrentWeather)\r\n    dispatch(getWeatherForecast)\r\n    dispatch(getNews)\r\n  }\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(App)\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport rootReducer from './reducers'\r\nimport App from './App';\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n// store.subscribe(()=>{\r\n//   console.log(store.getState())\r\n// })\r\n\r\n\r\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\r\n"],"sourceRoot":""}